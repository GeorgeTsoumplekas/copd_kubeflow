# PIPELINE DEFINITION
# Name: statistical-analysis-component
# Inputs:
#    data_csv: system.Dataset
# Outputs:
#    statistical_analysis_results: system.Artifact
components:
  comp-statistical-analysis-component:
    executorLabel: exec-statistical-analysis-component
    inputDefinitions:
      artifacts:
        data_csv:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
    outputDefinitions:
      artifacts:
        statistical_analysis_results:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-statistical-analysis-component:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - statistical_analysis_component
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.8.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'pandas==2.2.0'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef statistical_analysis_component(\n    data_csv: Input[Dataset],\
          \ statistical_analysis_results: Output[Artifact]\n):\n    import csv\n \
          \   import codecs\n    import pandas as pd\n    from statistical_analysis\
          \ import check_statistical_analysis\n\n    data = pd.read_csv(data_csv.path,\
          \ index_col=0)\n    if \"copd\" in data.columns.tolist():\n        data\
          \ = data.drop(columns=[\"copd\"])\n\n    csv_reader = csv.DictReader(codecs.iterdecode(data_csv.path,\
          \ \"utf-8\"))\n\n    statistical_analysis_results = check_statistical_analysis(data,\
          \ csv_reader)\n\n    return statistical_analysis_results\n\n"
        image: python:3.10
pipelineInfo:
  name: statistical-analysis-component
root:
  dag:
    outputs:
      artifacts:
        statistical_analysis_results:
          artifactSelectors:
          - outputArtifactKey: statistical_analysis_results
            producerSubtask: statistical-analysis-component
    tasks:
      statistical-analysis-component:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-statistical-analysis-component
        inputs:
          artifacts:
            data_csv:
              componentInputArtifact: data_csv
        taskInfo:
          name: statistical-analysis-component
  inputDefinitions:
    artifacts:
      data_csv:
        artifactType:
          schemaTitle: system.Dataset
          schemaVersion: 0.0.1
  outputDefinitions:
    artifacts:
      statistical_analysis_results:
        artifactType:
          schemaTitle: system.Artifact
          schemaVersion: 0.0.1
schemaVersion: 2.1.0
sdkVersion: kfp-2.8.0
